# Updated Config
# sauce: https://gist.github.com/tsl0922/d79fc1f8097dde660b34

set-option -g default-shell /usr/bin/zsh

# use backtick
set-option -g prefix `
unbind-key `
bind-key ` send-prefix

set -g base-index 0

# Easy config reload
bind-key R source-file ~/.tmux.conf \; display-message "tmux.conf reloaded."

# vi is good
setw -g mode-keys vi

# mouse behavior
setw -g mouse on

set-option -g default-terminal screen-256color

bind-key : command-prompt
bind-key r refresh-client
bind-key L clear-history

bind-key space next-window
bind-key bspace previous-window
bind-key enter next-layout

# use vim-like keys for splits and windows
bind-key v split-window -h
bind-key s split-window -v
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-l) || tmux select-pane -R"
bind -n 'C-\' run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys 'C-\\') || tmux select-pane -l"
bind C-l send-keys 'C-l'

bind-key C-o rotate-window

bind-key + select-layout main-horizontal
bind-key = select-layout main-vertical

set-window-option -g other-pane-height 25
set-window-option -g other-pane-width 80
set-window-option -g display-panes-time 1500
set-window-option -g window-status-current-style fg=magenta

bind-key a last-pane
bind-key q display-panes
bind-key c new-window
bind-key t next-window
bind-key T previous-window

bind-key [ copy-mode
bind-key ] paste-buffer

# To copy, left click and drag to highlight text in yellow,
# once you release left click yellow text will disappear and will automatically be available in clipboard
# # Use vim keybindings in copy mode
setw -g mode-keys vi
# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -selection c"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard"

# Status Bar
set-option -g status-interval 1
set-option -g status-style bg=black
set-option -g status-style fg=white
set -g status-left '#[fg=green]#H #[default]'
set -g status-right '%a%l:%M:%S %p#[default] #[fg=blue]%Y-%m-%d'

set-option -g pane-active-border-style fg=yellow
set-option -g pane-border-style fg=cyan

# Set window notifications
setw -g monitor-activity on
set -g visual-activity on

# Allow the arrow key to be used immediately after changing windows
set-option -g repeat-time 0

# Increase scrollback history limit
set-option -g history-limit 999999

# Custom Configuration
start-server
new-session -c "/home/chaosaffe/" -n "scratch" -s "default"
attach-session -d -t "default"

new-window -d -n "tf-infra" -c "/home/chaosaffe/Documents/go/src/github.com/pscloudops/terraform-infrastructure/"
new-window -d -n "k8s-infra" -c "/home/chaosaffe/Documents/go/src/github.com/pscloudops/kubernetes-infrastructure/"
new-window -d -n "ps-charts" -c "/home/chaosaffe/Documents/go/src/github.com/ps-charts"
new-window -d -n "app-dev-us" -c "/home/chaosaffe/Documents/go/src/github.com/pscloudops/" -e "KUBECONFIG=/home/chaosaffe/.kube/configs/app_dev_us.yml" -e "ASSUME_ENVIRONMENT=dev"
new-window -d -n "app-stage-us" -c "/home/chaosaffe/Documents/go/src/github.com/pscloudops/" -e "KUBECONFIG=/home/chaosaffe/.kube/configs/app_stage_us.yml" -e "ASSUME_ENVIRONMENT=prod"
new-window -d -n "app-prod-us" -c "/home/chaosaffe/Documents/go/src/github.com/pscloudops/" -e "KUBECONFIG=/home/chaosaffe/.kube/configs/app_prod_us.yml" -e "ASSUME_ENVIRONMENT=prod"
new-window -d -n "app-prod-eu" -c "/home/chaosaffe/Documents/go/src/github.com/pscloudops/" -e "KUBECONFIG=/home/chaosaffe/.kube/configs/app_prod_eu.yml" -e "ASSUME_ENVIRONMENT=prod"
new-window -d -n "lb-dev-us" -c "/home/chaosaffe/Documents/go/src/github.com/pscloudops/" -e "KUBECONFIG=/home/chaosaffe/.kube/configs/lb_development_us.yml" -e "ASSUME_ENVIRONMENT=lb"
new-window -d -n "lb-prod-us" -c "/home/chaosaffe/Documents/go/src/github.com/pscloudops/" -e "KUBECONFIG=/home/chaosaffe/.kube/configs/lb_production_us.yml" -e "ASSUME_ENVIRONMENT=lb"
new-window -d -n "ops-svc" -c "/home/chaosaffe/Documents/go/src/github.com/pscloudops/" -e "KUBECONFIG=/home/chaosaffe/.kube/configs/ops_services.yml" -e "ASSUME_ENVIRONMENT=svc"
new-window -d -n "ops-res" -c "/home/chaosaffe/Documents/go/src/github.com/pscloudops/" -e "KUBECONFIG=/home/chaosaffe/.kube/configs/ops_res_us.yml" -e "ASSUME_ENVIRONMENT=dev"
new-window -d -n "ops-test" -c "/home/chaosaffe/Documents/go/src/github.com/pscloudops/" -e "KUBECONFIG=/home/chaosaffe/.kube/configs/ops_test_us.yml" -e "ASSUME_ENVIRONMENT=dev"
